# ASP.NET Core (.NET Framework)
# Build and test ASP.NET Core projects targeting the full .NET Framework.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
- main

variables:
  buildConfiguration: 'Release'
  
name: '2.0.$(Rev:r)'

steps:
- task: DotNetCoreCLI@2
  displayName: 'Build Library'
  inputs:
    command: 'build'
    projects: 'CanvasApi.Client/CanvasApi.Client.csproj'
    arguments: '--configuration $(BuildConfiguration) /p:Version=$(Build.BuildNumber)'

- task: DotNetCoreCLI@2
  displayName: 'Test Library'
  inputs:
    command: 'test'
    projects: 'CanvasApi.Client.Test/CanvasApi.Client.Test.csproj'
    testRunTitle: 'Canvas API Test'

- task: DotNetCoreCLI@2
  displayName: 'Publish library'
  inputs:
    command: 'publish'
    publishWebProjects: false
    projects: 'CanvasApi.Client/CanvasApi.Client.csproj'
    arguments: '--configuration $(BuildConfiguration) /p:Version=$(Build.BuildNumber)'
    
- task: DotNetCoreCLI@2
  displayName: 'Pack Library'
  inputs:
    command: 'pack'
    packagesToPack: 'CanvasApi.Client/CanvasApi.Client.csproj'
    versioningScheme: 'byBuildNumber'

- task: DotNetCoreCLI@2
  displayName: 'Uploading to Private Nuget'
  inputs:
    command: 'push'
    packagesToPush: '$(Build.ArtifactStagingDirectory)/*.nupkg'
    nuGetFeedType: 'internal'
    publishVstsFeed: '0bd21b8b-3ec1-4cf1-9e2a-c491e2a220a5'



- task: NuGetCommand@2
  condition: and(succeeded(), eq(variables.nuget, true))
  inputs:
    command: 'push'
    packagesToPush: '$(Build.ArtifactStagingDirectory)/**/*.nupkg;!$(Build.ArtifactStagingDirectory)/**/*.symbols.nupkg'
    nuGetFeedType: 'external'
    publishFeedCredentials: 'Nuget.Org'
    